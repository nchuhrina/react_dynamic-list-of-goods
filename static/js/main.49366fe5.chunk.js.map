{"version":3,"sources":["GoodItem.tsx","GoodsList.tsx","helpers/api.ts","App.tsx","index.tsx"],"names":["GoodItem","id","name","color","key","className","GoodsList","goods","map","good","getGoods","a","fetch","then","response","json","App","state","downloadGoods","goodFromServer","setState","downloadRedGoods","goodsFromServer","filter","downloadFiveFirstGoods","slice","sort","b","localeCompare","type","onClick","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"6OASaA,G,MAAoC,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MAAb,OAC/C,wBAAIC,IAAKH,EAAII,UAAWF,GAAQD,KCArBI,EAAsC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACjD,oCACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,kBAAC,EAAD,CAAUR,GAAIQ,EAAKR,GAAIC,KAAMO,EAAKP,KAAMC,MAAOM,EAAKN,a,uBCL3CO,EAPD,uCAAG,4BAAAC,EAAA,4DACC,wBADD,SAEKC,MAAM,GAAD,OADT,wBACS,gBAA0BC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAF9D,cAETR,EAFS,yBAIRA,GAJQ,2CAAH,qDCgECS,EAnDf,4MACEC,MAAQ,CACNV,MAAO,IAFX,EAKEW,cAAgB,WACdR,IACGG,MAAK,SAAAM,GACJ,EAAKC,SAAS,CACZb,MAAOY,QATjB,EAgBEE,iBAAmB,WACjBX,IACGG,MAAK,SAACS,GACL,EAAKF,SAAS,CACZb,MAAOe,EAAgBC,QAAO,SAACd,GAAD,MAA4C,QAAfA,EAAKN,eApB1E,EA0BEqB,uBAAyB,WACvBd,IACGG,MAAK,SAACS,GACL,EAAKF,SAAS,CACZb,MAAOe,EACJG,MAAM,EAAG,GACTC,MAAK,SAACf,EAASgB,GAAV,OAAsBhB,EAAET,KAAK0B,cAAcD,EAAEzB,eAhC/D,uDAsCI,OACE,oCAEE,qDACA,4BAAQ2B,KAAK,SAASC,QAASC,KAAKb,eAApC,YACA,4BAAQW,KAAK,SAASC,QAASC,KAAKP,wBAApC,WACA,4BAAQK,KAAK,SAASC,QAASC,KAAKV,kBAApC,aACA,kBAAC,EAAD,CAAWd,MAAOwB,KAAKd,MAAMV,aA7CrC,GAAyByB,IAAMC,WCV/BC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.49366fe5.chunk.js","sourcesContent":["import React from 'react';\n\n\ntype GoodItemProps = {\n  id: number;\n  name: string;\n  color: string;\n};\n\nexport const GoodItem: React.FC<GoodItemProps> = ({ id, name, color }) => (\n  <li key={id} className={color}>{name}</li>\n);\n","\nimport React from 'react';\n\nimport { GoodItem } from './GoodItem';\nimport { Good } from './interfaces';\n\ntype GoodsListProps = {\n  goods: Good[];\n};\n\nexport const GoodsList: React.FC<GoodsListProps> = ({ goods }) => (\n  <>\n    {goods.map(good => (\n      <GoodItem id={good.id} name={good.name} color={good.color} />\n    ))}\n  </>\n);\n","\nconst getGoods = async () => {\n  const API_URL = 'http://localhost:3000';\n  const goods = await fetch(`${API_URL}/goods.json`).then(response => response.json());\n\n  return goods;\n};\n\nexport default getGoods;\n","import React from 'react';\nimport './App.css';\nimport { Good } from './interfaces';\n\nimport { GoodsList } from './GoodsList';\nimport getGoods from './helpers/api';\n\n\ntype AppState = {\n  goods: Good[];\n};\n\ntype AppProps = {};\n\nexport class App extends React.Component<AppProps, AppState> {\n  state = {\n    goods: [],\n  };\n\n  downloadGoods = () => {\n    getGoods()\n      .then(goodFromServer => {\n        this.setState({\n          goods: goodFromServer,\n\n        });\n      });\n  };\n\n\n  downloadRedGoods = () => {\n    getGoods()\n      .then((goodsFromServer) => {\n        this.setState({\n          goods: goodsFromServer.filter((good: { color: string }) => good.color === 'red'),\n\n        });\n      });\n  };\n\n  downloadFiveFirstGoods = () => {\n    getGoods()\n      .then((goodsFromServer) => {\n        this.setState({\n          goods: goodsFromServer\n            .slice(0, 5)\n            .sort((a: Good, b: Good) => a.name.localeCompare(b.name)),\n        });\n      });\n  };\n\n  render() {\n    return (\n      <>\n\n        <h1>Dynamic list of Goods</h1>\n        <button type=\"button\" onClick={this.downloadGoods}>Download</button>\n        <button type=\"button\" onClick={this.downloadFiveFirstGoods}>First 5</button>\n        <button type=\"button\" onClick={this.downloadRedGoods}>Red Goods</button>\n        <GoodsList goods={this.state.goods} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}